{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","handleClick","movie","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","map","backdrop_path","src","poster_path","alt","onClick","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backdropPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7792342e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n//every time u call instance.get('a/sd/...') it returns baseUrl+'a/sd/...'\r\nexport default instance;","import React,{useState,useEffect} from 'react';\r\nimport axios from '../axios';\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_img_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\tconst opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData(){\r\n\t\t\tconst request = await axios.get(fetchUrl);\r\n\t\t\t//console.log(request);\r\n\t\t\tsetMovies(request.data.results);\r\n\t\t\treturn request;\r\n\t\t};\r\n\t\tfetchData();\r\n\t}, [fetchUrl]);\r\n\r\n\t//console.table(movies);\r\n\r\n\t// const handleClick = async (movie) => {\r\n //    if (trailerUrl) {\r\n //      setTrailerUrl(\"\");\r\n //    } else {\r\n //      let trailerurl = await axios.get(\r\n //        `/movie/${movie.id}/videos?api_key=eb037a6e4ca4cf5d0a2bf6dd77ab384e`\r\n //      );\r\n //      setTrailerUrl(trailerurl.data.results[0]?.key);\r\n //    }\r\n //  };\r\n\r\n  const handleClick = async (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name||\"\")\r\n      .then((url)=>{\r\n      \tconst urlParams = new URLSearchParams(new URL(url).search);\r\n      \tsetTrailerUrl(urlParams.get('v'));\r\n      })\r\n      .catch((error)=>console.log(error))\r\n    }\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<div className=\"posters\">\r\n\t\t\t\t{movies.map(movie=>\r\n\t\t\t\t\tmovie.backdrop_path!==null && (\r\n\t\t\t\t\t<img \r\n\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\tclassName = {`poster ${isLargeRow && \"posterLarge\"}`}\r\n\t\t\t\t\tsrc={`${base_img_url}${isLargeRow?movie.poster_path:movie.backdrop_path}`} \r\n\t\t\t\t\talt={movie.name}\r\n\t\t\t\t\tonClick={() => handleClick(movie)}\r\n\t\t\t\t\t>\t\r\n\t\t\t\t\t</img>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Row","const API_KEY = \"eb037a6e4ca4cf5d0a2bf6dd77ab384e\";\r\n\r\nconst requests = {\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import React,{useState,useEffect} from 'react';\r\nimport axios from '../axios';\r\nimport requests from '../requests';\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n\tconst [movie, setMovie] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchData(){\r\n\t\t\tconst request = await axios.get(requests.fetchNetflixOriginals);\r\n\t\t\tsetMovie(\r\n\t\t\t\trequest.data.results[Math.floor(Math.random()*request.data.results.length-1)]\r\n\t\t\t);\r\n\t\t\t\treturn request;\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, [])\r\n\r\n\tfunction truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  \t}\r\n\r\n\treturn (\r\n\t\t<header \r\n\t\tclassName=\"banner\"\r\n\t\tstyle = {{\r\n\t\t\tbackgroundSize: \"cover\",\r\n        \tbackgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie&&movie.backdrop_path}\")`,\r\n        \tbackdropPosition: \"center center\",\r\n\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"banner-contets\">\r\n\t\t\t\t<h1 className=\"banner-title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n\t\t\t\t<div className=\"banner-buttons\">\r\n\t\t\t\t\t<button className=\"button\">Play</button>\r\n\t\t\t\t\t<button className=\"button\">My List</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p className=\"banner-desc\">\r\n\t\t\t\t\t{truncate(movie?.overview,150)}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"banner--fadedbottom\"></div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Banner","import React,{useState,useEffect} from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n\treturn (\r\n\t\t<div className={`nav ${show && \"nav--black\"}`}>\r\n\t\t\t<img\r\n\t\t\tclassName=\"nav--logo\" \r\n\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n\t\t\talt=\"Netflix Logo\"\r\n\t\t\t></img>\r\n\t\t\t<div className=\"nav--usercontent\">\r\n\t\t\t<p \r\n\t\t\tclassName=\"nav--username\"\r\n\t\t\t>Nikhil</p>\r\n\t\t\t<img\r\n\t\t\tclassName=\"nav--avatar\" \r\n\t\t\tsrc=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n\t\t\talt=\"Netflix Avatar\"\r\n\t\t\t></img>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Nav","import React from 'react';\nimport './App.css';\nimport Row from './components/Row'\nimport Banner from './components/Banner'\nimport Nav from './components/Nav'\nimport requests from './requests'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav/>\n      <Banner/>\n      <Row\n       title=\"NETFLIX ORIGINALS\" \n       fetchUrl={requests.fetchNetflixOriginals}\n       isLargeRow\n       ></Row>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}></Row>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}></Row>\n      <Row title=\"Action\" fetchUrl={requests.fetchActionMovies}></Row>\n      <Row title=\"Comedy\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Horror\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Romance\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}></Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}